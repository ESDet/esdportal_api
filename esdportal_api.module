<?php

/**
 * @file esdportal_api.module
 */

use Tobscure\JsonApi\Document;
use Drupal\esdportal_api\Serializers\EcSerializer;
use Drupal\esdportal_api\EcDataUtils;

define("ESDPORTAL_API_DEFAULT_LIMIT", 100);
define("ESDPORTAL_API_MAX_LIMIT", 1000);

/**
 * Implements hook_services_resources().
 *
 * Defines resources for special (non-standard) ESD Portal data.
 */
function esdportal_api_services_resources() {
  $api = array(
    'ecs' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves Early Childhood Center',
          'callback' => '_esdportal_api_retrieve_ec',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'id',
              'type' => 'int',
              'description' => 'ec entity ID',
              'source' => array('path' => '0'),
              'optional' => FALSE,
              'default value' => NULL,
            ),
            array(
              'name' => 'flatten_fields',
              'type' => 'int',
              'description' => 'Remove localization structure from fields if true',
              'source' => array('param' => 'flatten_fields'),
              'optional' => TRUE,
              'default value' => 0,
            ),
          ),
        ),
        'index' => array(
          'help' => 'Lists Early Childhood Centers',
          'callback' => '_esdportal_api_index_ecs',
          'access arguments' => array('access content'),
          'args' => array(
            array(
              'name' => 'includes',
              'type' => 'string',
              'description' => 'Include other datasets, comma-separated (current options: ec_profile, most_recent_ec_state_rating)',
              'source' => array('param' => 'includes'),
              'optional' => TRUE,
              'default value' => null,
            ),
            array(
              'name' => 'limit',
              'type' => 'int',
              'description' => 'Limit response count (default ' . ESDPORTAL_API_DEFAULT_LIMIT . ')',
              'source' => array('param' => 'limit'),
              'optional' => TRUE,
              'default value' => ESDPORTAL_API_DEFAULT_LIMIT,
            ),
            array(
              'name' => 'offset',
              'type' => 'int',
              'description' => 'Offset starting record',
              'source' => array('param' => 'offset'),
              'optional' => TRUE,
              'default value' => 0,
            ),
            array(
              'name' => 'flatten_fields',
              'type' => 'int',
              'description' => 'Remove localization structure from fields if true',
              'source' => array('param' => 'flatten_fields'),
              'optional' => TRUE,
              'default value' => 0,
            ),
          ),
        ),
      ),
    ),
    'ec_state_ratings' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves state ratings for an Early Childhood Center',
          'callback' => '_esdportal_api_retrieve_ec_state_rating',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'esd_ec_id',
              'type' => 'int',
              'description' => 'ESD-universe early childhood center ID',
              'source' => array('path' => '0'),
              'optional' => FALSE,
              'default value' => NULL,
            ),
            array(
              'name' => 'batch_timestamp',
              'type' => 'int',
              'description' => 'UNIX timestamp of a specific batch (if not provided, returns most recent rating)',
              'source' => array('param' => 'batch_timestamp'),
              'optional' => TRUE,
              'default value' => NULL,
            ),
          ),
        ),
        'index' => array(
          'help' => 'Lists most recent Early Childhood Center state ratings',
          'callback' => '_esdportal_api_index_ec_state_ratings',
          'access arguments' => array('access content'),
          'args' => array(
            array(
              'name' => 'batch_timestamp',
              'type' => 'int',
              'description' => 'UNIX timestamp of a specific batch (if not provided, returns most recent ratings)',
              'source' => array('path' => '1'),
              'optional' => TRUE,
              'default value' => NULL,
            ),
          ),
        ),
      ),
    ),
  );

  return $api;
}

/**
 * Stub.
 */
function _esdportal_api_retrieve_ec($id, $flatten_fields = false) {
  $document = new Document;

  $ec = taxonomy_term_load($id);
  if (!$ec) {
    return services_error(t('early childhood center @id does not exist.', array('@id' => $id)), 404);
  }

  $ec->ec_profile_id = _esdportal_api_get_ec_profile_id($ec);

  if ($ec->ec_profile_id) {
    $ec->ec_profile = node_load($ec->ec_profile_id);

    if ($flatten_fields) {
      _esdportal_api_flatten_entity_fields('node', $ec->ec_profile);
    }
  }

  if ($flatten_fields) {
    _esdportal_api_flatten_entity_fields('taxonomy_term', $ec);
  }

  $ec->most_recent_ec_state_rating = (object) _esdportal_api_retrieve_ec_state_rating(\Drupal\esdportal_api\EcDataUtils::getEcId($ec));
  $ec->most_recent_ec_state_rating_id = $ec->most_recent_ec_state_rating->rating_id;

  $serializer = new EcSerializer(['ec_profile', 'most_recent_ec_state_rating']);

  $resource = $serializer->resource($ec);

  $document->setData($resource);

  return $document->toArray();
}

function _esdportal_api_flatten_entity_fields($entity_type, &$entity) {
  if (isset($entity->vocabulary_machine_name)) {
    $entity->machine_name = $entity->vocabulary_machine_name;
  }
  \Drupal\esdportal_api\EcDataUtils::flattenFields($entity_type, $entity);
}

function _esdportal_api_get_ec_profile_id($ec) {
  $ec_profile_id = db_query("SELECT ti.nid FROM taxonomy_index AS ti INNER JOIN node AS n ON n.nid=ti.nid WHERE ti.tid=:tid AND n.type='ec_profile'", array(':tid' => $ec->tid))->fetchField();

  return $ec_profile_id;
}

/**
 * Retrieves list of all early childhood centers.
 *
 * @param string $includes
 *   related datasets to include, comma-separated
 * @param int $limit
 *   if null, return all results(!)
 * @param int $offset
 */
function _esdportal_api_index_ecs($includes = null, $limit = null, $offset = 0, $flatten_fields = false) {
  $document = new Document;

  $ecs = taxonomy_get_tree(19, 0, null, true);

  // paginate
  $total = count($ecs);
  $ecs = array_slice($ecs, $offset, $limit, TRUE);
  $link_to_self = $_SERVER['REQUEST_URI'];


  $includes = (strlen($includes) > 0) ? explode(',', $includes) : null;

  $serializer = ($includes) ? new EcSerializer($includes) : new EcSerializer();

  foreach ($ecs as &$ec) {
    if ($flatten_fields) {
      _esdportal_api_flatten_entity_fields('taxonomy_term', $ec);
    }

    $ec->ec_profile_id = _esdportal_api_get_ec_profile_id($ec);
  }
  unset($ec);

  if (in_array('ec_profile', $includes)) {
    foreach ($ecs as $ec) {
      if ($ec->ec_profile_id) {
        $ec->ec_profile = node_load($ec->ec_profile_id);

        if ($flatten_fields) {
          _esdportal_api_flatten_entity_fields('node', $ec->ec_profile);
        }
      }
    }
  }

  if (in_array('most_recent_ec_state_rating', $includes)) {
    foreach ($ecs as $ec) {
      $ec->most_recent_ec_state_rating = (object) _esdportal_api_retrieve_ec_state_rating(\Drupal\esdportal_api\EcDataUtils::getEcId($ec));
      $ec->most_recent_ec_state_rating_id = $ec->most_recent_ec_state_rating->rating_id;
    }
  }

  $collection = $serializer->collection($ecs);

  $document->setData($collection);

  $document->addMeta('total', $total);
  $document->addLink('self', $link_to_self);

  return $document->toArray();
}

/**
 * Retrieves a single EC Center's rating with given timestamp or most recent timestamp if none is given.
 *
 * @param $esd_ec_id
 *
 * @param $batch_timestamp
 */
function _esdportal_api_retrieve_ec_state_rating($esd_ec_id, $batch_timestamp = null) {
  if (isset($batch_timestamp) && $batch_timestamp > 0) {
    $rating = db_query('SELECT * FROM {ec_state_ratings} WHERE timestamp=:batch_timestamp AND esd_ec_id=:esd_ec_id', array(':esd_ec_id' => $esd_ec_id, ':batch_timestamp' => $batch_timestamp))->fetchAssoc();
  } else {
    $rating = db_query('SELECT * FROM {ec_state_ratings} WHERE timestamp=(SELECT MAX(timestamp) FROM {ec_state_ratings}) AND esd_ec_id=:esd_ec_id', array(':esd_ec_id' => $esd_ec_id))->fetchAssoc();
  }
  return $rating;
}

/**
 * Lists all batch timestamps.
 *
 * (not offered via api yet)
 */
function _esdportal_api_index_ec_state_ratings_batches() {
  return db_query('SELECT DISTINCT(timestamp) FROM {ec_state_ratings} ORDER BY timestamp DESC')->fetchAssoc();
}

/**
 * Lists set of EC state ratings with given timestamp or most recent timestamp if none is given.
 *
 * @param int $batch_timestamp
 */
function _esdportal_api_index_ec_state_ratings($batch_timestamp) {
  if (isset($batch_timestamp) && $batch_timestamp > 0) {
    $ratings = db_query('SELECT * FROM {ec_state_ratings} WHERE timestamp=:batch_timestamp', array(':batch_timestamp' => $batch_timestamp))->fetchAssoc();
  } else {
    $ratings = db_query('SELECT * FROM {ec_state_ratings} WHERE timestamp=(SELECT MAX(timestamp) FROM {ec_state_ratings})')->fetchAll();
  }

  return array('ec_state_ratings' => $ratings);
}

